include "core.h"
include stdio.h


fib(a:int):int = {
	if (a < 2) return 1
	return fib(a-2)+fib(a-1)
}

Fib : trait {
	fib:()=>int
}

Int : class {
	this(x:int):x(x)={}
	x:int
}
Int <: Fib {
	fib():int = {
		if (@x < 2) return 1
		else {
			p1:Int(@x - 2)
			p2:Int(@x - 1)
			return p1:Fib=>fib() + p2:Fib=>fib()
		}
	}
}

Add : class {
	this(x:*Class,y:*Class):x(x),y(y)={}
	x:*Class
	y:*Class
}

Eval : trait { eval:()=>int }
Eval :> Int { eval():int =
	return @x
}
Eval :> Add { eval():int =
	return (*@x):Eval=>eval() + (*@y):Eval=>eval()
}

main():int = {
	start:long = gett()

	result:int = fib(40)
	printf("fib %d %d %ld\n", 40, result, gett() - start)

	start = gett()
	f:Int(20)
	f.x = 40
	result = f:Fib=>fib()
	printf("fib %d %d %ld\n", f.x, result, gett() - start)

	printf("eval %d\n", f:Eval=>eval())

	f2:Int(30)
	add:Add(new Int(1) :: *Class, new Int(2) :: *Class)

	printf("eval %d\n", add:Eval=>eval())

	return 0
}
